# context path

server.servlet.contextPath=/items


# security

server.port=8443

server.ssl.bundle=rest-service
spring.ssl.bundle.jks.rest-service.key.alias=itemservice
spring.ssl.bundle.jks.rest-service.keystore.location=classpath:keystore.p12
spring.ssl.bundle.jks.rest-service.keystore.password=${item.keystore.password}
spring.ssl.bundle.jks.rest-service.keystore.type=PKCS12


# data source

spring.datasource.username=postgres
spring.datasource.password=${postgres.password}
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.default_schema=item


# kafka

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# application

application.id=item
application.events.topic=events


# cache

spring.cache.type=redis
spring.data.redis.port=6379
spring.cache.redis.time-to-live=120000


spring.profiles.default=docker

#---

spring.config.activate.on-profile=local

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://cnewbywa.auth/realms/item

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres

spring.kafka.producer.bootstrap-servers=localhost:29092

spring.data.redis.host=localhost

#---

spring.config.activate.on-profile=docker

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://cnewbywa.auth/realms/item

spring.datasource.url=jdbc:postgresql://postgres:5432/postgres

spring.kafka.producer.bootstrap-servers=kafka:9092

spring.data.redis.host=redis
